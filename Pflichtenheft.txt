1.Einleitung
Die Web App „Vibez“ soll eine Visual Studio Blazor Applikation werden, mit dem Ziel, Partys zu verwalten (Party erstellen, User zur Party einladen, Party Manager).

2. Auftrag
Die Web App soll wie folgt agieren können: 
•	Die App soll nur von bereits Registrierten bzw. Angemeldeten Usern verwendet werden können. Dem entsprechend soll beim öffnen der Webseite ein Login/Registrierung erscheinen.
•	Dashboard Button (Main Button): Auf der Main Seite sollen 3 verschiedene Buttons sein: 
Ein Button der alle Partys zu denen der angemeldete User eingeladen ist und auch akzeptiert hat anzeigt. Ein Button der in Naher Zukunft liegende Partys anzeigen soll und ein Button der die Historie von bereits besuchten Partys anzeigt.
•	Die Felder der Partys sollen geöffnet werden können. Dann soll ein Fenster erscheinen, auf dem man die Anzahl der Besucher, Standort der Party und Uhrzeit sehen kann. 
•	Zusätzlich soll am Party Feld ein Cancel Button sein, der den User von einer Party abmeldet.
•	Create Party Button (Main Button): Dieser Button soll ein Fenster öffnen, auf dem man eine Party erstellen kann. Dazu gehört die Adresse(Google Maps), Organisator, User einladen(per Mail, oder Username), Notizen. Diese Eigenschaften einer Party kann man unter diesem Button einrichten und mit einem Bestätigen Button erstellen/absenden.
•	Add Friends(Main Button): Mit betätigen von diesem Button soll sich ein Fenster öffnen, auf dem man andere User der App adden kann (via. Username/Email Adresse).

3.Teams und Schnittstellen
An dem Projekt „Vibez“ arbeiten folgende Personen: Jakob Moser, Marc Sahler, Franziska Schnetzer, Claire Pramstaller. Wir werden uns größtenteils über Discord, im Unterricht, per GitHup und per Teams austauschen.

5.Rahmenbedingungen
Unsere Rahmenbedingungen sind:
•	Ein ausführliches und funktionierendes GitHub Repository mit dem Neusten Stand des Projektes.
•	Jeder sollte die gleiche version des Entity.Framework haben (.NET 7).
•	Asführliche inline Kommentare, sowie Projekt Dokumentation.
•	Ein SQL Datenbank Management Tool (SQL Server).
•	Alle sollten den Docker installiert haben
 
6.Technische Anforderungen
Die Technischen Anforderungen für unser Projekt sind:
•	GitHub Repository.
•	SQL Server.
•	Visual Studio (Blazor Web Server)
•	Extension (Mailkit)
•	Google Maps API

7.Problemanalyse
Mögliche Probleme, die beim Projekt entstehen können, sind:
•	Emails verschicken könnte zu Sicherheits-Problemen führen.
•	Die Verwendung der Google Maps API könnte sich schwierig gestalten (fehlende Erfahrung).
•	Beim Frontend könnten Probleme mit dem Design, Farben, … geben.
•	Beim Zeitmanagement könnten wir auf Probleme mit der Einteilung bzw. Einhaltung von Meilensteinen stoßen.
•	Probleme beim Adden von Usern.

8.Qualität
Unsere Ansprüche an unser Projekt sind:
•	Wir möchten ein genaues und schönes User Interface.
•	So gut wie keine Bugs bei diversen Aktionen entstehen.
•	Daten in der Datenbank sollen der Richtigkeit entsprechen und streng nach Schema sein.

9.Projektentwicklung
Siehe Zeitplan.
