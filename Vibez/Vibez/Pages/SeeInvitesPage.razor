@page "/seeinvites"

@using Vibez.Data.DTOs
@using Vibez.Data.Service

@inject IEventService EventService
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Your upcoming Events</h3>

@if (!authenticated)
{
    <div>
        <p>
            Please <a href="Identity/Account/Register">sign in</a>
            or <a href="Identity/Account/Login">log in</a>
            to use the application!
        </p>
    </div>
}
else
{
    @foreach (var item in _listOfEventsDto)
    {
        <div style="padding-top: 10px; padding-bottom: 10px;">
            <div class="card" @onclick="ViewAllEventDetails">
                <div class="card-header" style="background-color: #8c74ac; color: white">
                    @item.EventName
                </div>
                <div class="card-body">
                    <p class="card-text">Time: @item.TimeOnly</p>
                    <p class="card-text">Date: @item.Date.ToShortDateString()</p>
                    <p class="card-text">Address: @item.Address</p>
                    <p class="card-text">Participants: @item.ParticipantCount</p>
                </div>
            </div>
        </div>
    }
}

@code {
    private List<EventDTO> _listOfEventsDto = new List<EventDTO>();
    public string? _currentUser;
    private AuthenticationState? _authenticationState;
    private bool authenticated;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        authenticated = _authenticationState.User.Identity.IsAuthenticated;

        if (_authenticationState != null)
        {
            _currentUser = _authenticationState.User.Identity?.Name;
        }

        if (_currentUser != null)
        {
            var listWithEvents = await EventService.GetAllUpcomingEventsForOneUser(_currentUser);
            foreach (var eventForUser in listWithEvents)
            {
                _listOfEventsDto.Add(new EventDTO
                {
                    EventName = eventForUser.EventName,
                    Address = eventForUser.Address,
                    City = eventForUser.City,
                    CreatorName = eventForUser.CreatorName,
                    Date = eventForUser.Date,
                    Notes = eventForUser.Notes,
                    ParticipantCount = eventForUser.ParticipantCount,
                    Postcode = eventForUser.Postcode,
                    TimeOnly = eventForUser.EventTime
                });
            }
        }
    }

    private void ViewAllEventDetails()
    {

    }
}
